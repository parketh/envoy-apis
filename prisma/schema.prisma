generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Delegate {
  id       Int       @id @default(autoincrement())
  name     String
  email    String    @unique
  comments Comment[]
  memos    Memo[]
}

model Protocol {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String
  proposals   Proposal[]
}

model Proposal {
  id           Int       @id @default(autoincrement())
  title        String    @unique
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  protocolId   Int
  type         String
  dateAdded    DateTime
  dateExpiry   DateTime
  dateExecuted DateTime?
  voteType     String?
  options      String[]
  voteUrl      String
  forumUrl     String
  status       Status
  decision     String?
  dateVoted    DateTime?
  protocol     Protocol  @relation(fields: [protocolId], references: [id])
  memo         Memo?
}

model Memo {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  proposalId     Int      @unique
  authorId       Int
  summary        String?
  reasonsFor     String?
  reasonsAgainst String?
  decision       String?
  rationale      String?
  likes          Int
  author         Delegate @relation(fields: [authorId], references: [id])
  proposal       Proposal @relation(fields: [proposalId], references: [id])
  comments       Comment?
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  memoId    Int      @unique
  authorId  Int
  text      String
  likes     Int
  author    Delegate @relation(fields: [authorId], references: [id])
  memo      Memo     @relation(fields: [memoId], references: [id])
}

enum Status {
  Unassigned
  Assigned
  Submitted
}

enum Role {
  USER
  ADMIN
}
